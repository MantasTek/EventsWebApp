@model EventsWebApp.Models.EventDetailsDto
@{
    ViewData["Title"] = "Event Details";
}
<h2>Event Details</h2>
<div class="card">
    <div class="card-body">
        <h3>@Model.EventName</h3>
        <p><strong>Category:</strong> @Model.EventCategory</p>
        <p><strong>Description:</strong> @Model.Description</p>
        <p><strong>Date:</strong> @Model.EventDate</p>
        <p><strong>Time:</strong> @Model.EventTime</p>
        <p><strong>Location:</strong> @Model.Location</p>
        <p><strong>Venue:</strong> @Model.VenueName</p>
        <p><strong>Capacity:</strong> @Model.Capacity</p>
        <p><strong>Tickets Sold:</strong> @Model.TicketsSold</p>
        <p><strong>Status:</strong> @Model.Status</p>

        @if (Model.TicketCategories != null && Model.TicketCategories.Any())
        {
            <div class="ticket-section mt-4">
                <h4>Ticket Categories</h4>
                <div class="row mt-3">
                    @foreach (var ticket in Model.TicketCategories)
                    {
                        <div class="col-md-4 mb-3">
                            <div class="card ticket-card h-100">
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@ticket.TicketCategory</h5>
                                    <p class="ticket-price">$@ticket.Price.ToString("F2")</p>
                                    <p class="card-text text-muted">
                                        @(ticket.AvailableQuantity > 0
                                            ? $"{ticket.AvailableQuantity} tickets available"
                                            : "Sold Out")
                                    </p>
                                    <button class="btn btn-primary mt-auto ticket-button"
                                    @(ticket.AvailableQuantity <= 0 ? "disabled" : "")
                                            onclick="showTicketPurchaseModal('@ticket.TicketId', '@ticket.TicketCategory', @ticket.Price, @ticket.AvailableQuantity)">
                                        Buy Ticket
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-4">
                No ticket categories available for this event yet.
            </div>
        }
    </div>
</div>

<div class="mt-3">
    <a asp-action="Edit" asp-route-id="@Model.EventId" class="btn btn-primary">Edit</a>
    <form asp-action="Delete" asp-route-id="@Model.EventId" method="post" style="display:inline;">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this event?')">Delete</button>
    </form>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<!-- Ticket Purchase Modal -->
<div class="modal fade" id="ticketModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Purchase Ticket</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>You are about to purchase:</p>
                <h4 id="modalTicketName"></h4>
                <p>Price: $<span id="modalTicketPrice"></span></p>

                <div class="form-group mb-3">
                    <label for="ticketQuantity" class="form-label">Quantity:</label>
                    <input type="number" id="ticketQuantity" class="form-control" min="1" max="10" value="1">
                </div>

                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    This is a mockup. Ticket purchasing functionality will be implemented in a future update.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="purchaseBtn">Purchase</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showTicketPurchaseModal(ticketId, ticketName, ticketPrice, maxQuantity) {
            // Set modal content
            document.getElementById('modalTicketName').textContent = ticketName;
            document.getElementById('modalTicketPrice').textContent = ticketPrice.toFixed(2);

            // Set quantity input max
            const quantityInput = document.getElementById('ticketQuantity');
            quantityInput.max = maxQuantity;
            quantityInput.value = 1;

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('ticketModal'));
            modal.show();

            // Handle purchase button click
            document.getElementById('purchaseBtn').onclick = function() {
                const quantity = document.getElementById('ticketQuantity').value;

                // Hide the modal
                modal.hide();

                // Show success message
                const total = (parseFloat(ticketPrice) * parseInt(quantity)).toFixed(2);
                showSuccessMessage(quantity, ticketName, total);
            };
        }

        function showSuccessMessage(quantity, ticketName, total) {
            // Create and add a success message to the page
            const alert = document.createElement('div');
            alert.className = 'alert alert-success alert-dismissible fade show';
            alert.innerHTML = `
                <strong>Thank you for your interest!</strong>
                Your mock purchase of ${quantity} ${ticketName} ticket(s) for $${total} has been simulated.
                This feature will be fully implemented in a future update.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

            // Insert at the top of the card body
            document.querySelector('.card-body').prepend(alert);

            // Auto-dismiss after 8 seconds
            setTimeout(() => {
                const bsAlert = bootstrap.Alert.getInstance(alert);
                if (bsAlert) {
                    bsAlert.close();
                } else {
                    alert.remove();
                }
            }, 8000);
        }
    </script>
}